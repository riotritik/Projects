"""
Django settings for EmailSpamDetection project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os # Keep this import

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# ⚠️ BEST PRACTICE: Get SECRET_KEY from environment variables on Render
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-3%-umuq1igmldik$8%f7jfl5w&g#ovl_von$d2h5smb=s%uq=_')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False # **FIXED: Must be False for production.**

# ALLOWED_HOSTS
# ⚠️ BEST PRACTICE: Get Allowed Hosts from environment variables on Render
ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', '*').split(',') # **FIXED: Use environment variable, fallback to '*'**


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'spam_detector',
]

MIDDLEWARE = [
    # Security Middleware must be at the top
    'django.middleware.security.SecurityMiddleware',
    # WhiteNoise must be placed directly after SecurityMiddleware
    'whitenoise.middleware.WhiteNoiseMiddleware', 
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


ROOT_URLCONF = 'EmailSpamDetection.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'EmailSpamDetection.wsgi.application'


# Database
# ⚠️ WARNING: SQLite (db.sqlite3) will lose data on Render's Free Plan restarts.
# You should use PostgreSQL for persistent data.
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# Configuration for WhiteNoise is added here for production deployment.
# ----------------------------------------------------------------------

# 1. Base static URL
STATIC_URL = 'static/'

# 2. **FIXED: Define STATIC_ROOT for `collectstatic`**
# This is the directory where all static files will be collected for WhiteNoise.
STATIC_ROOT = BASE_DIR / 'staticfiles'

# 3. **FIXED: Configure WhiteNoise storage backend for efficiency**
STORAGES = {
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
    },
    "staticfiles": {
        # This backend compresses static files and adds cache-busting filenames (manifest).
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'